
//------------------------------------------------------------------------------

//  <auto-generated>
//      This code was generated by:
//        TerminalGuiDesigner v1.0.17.0
//      You can make changes to this file and they will not be overwritten when saving.
//  </auto-generated>
// -----------------------------------------------------------------------------
using System.Runtime.InteropServices;

namespace BruetforcePassCheckerTUI{
    using Terminal.Gui;

    
    public partial class MyView {

        public MyView() 
        {
            InitializeComponent();
            buttonNewBase.Clicked += () => SelectFile();
        }

        void ReadFile()
        {
            string filePath = "C:\\path\\to\\your\\file.txt"; // Update this with your file path

            if (!File.Exists(filePath))
            {
                Console.WriteLine("File not found.");
                return;
            }

            string[] lines = File.ReadAllLines(filePath);
        }
        static void SelectFile()
        {
            FileDialogHelper.OpenFileName ofn = new FileDialogHelper.OpenFileName();
            ofn.structSize = Marshal.SizeOf(ofn);
            ofn.filter = "All Files\0*.*\0";
            ofn.file = new string(new char[256]);
            ofn.maxFile = ofn.file.Length;
            ofn.fileTitle = new string(new char[64]);
            ofn.maxFileTitle = ofn.fileTitle.Length;
            ofn.initialDir = @"C:\";

            if (FileDialogHelper.GetOpenFileName(ofn))
            {
                string selectedFilePath = ofn.file;
                MessageBox.Query("Подгрузка файла", "Выбранный путь:  " + selectedFilePath, "Ok");
            }
            else
            {
                MessageBox.Query("Подгрузка файла", "Файл не выбран", "Ok");
            }
        }
    }
}

class FileDialogHelper
{
    [DllImport("Comdlg32.dll", SetLastError = true, ThrowOnUnmappableChar = true, CharSet = CharSet.Auto)]
    public static extern bool GetOpenFileName([In, Out] OpenFileName ofn);

    [StructLayout(LayoutKind.Sequential, CharSet = CharSet.Auto)]
    public class OpenFileName
    {
        public int structSize = 0;
        public IntPtr dlgOwner = IntPtr.Zero;
        public IntPtr instance = IntPtr.Zero;

        public string filter = null;
        public string customFilter = null;
        public int maxCustFilter = 0;
        public int filterIndex = 0;

        public string file = null;
        public int maxFile = 0;

        public string fileTitle = null;
        public int maxFileTitle = 0;

        public string initialDir = null;

        public string title = null;

        public int flags = 0;
        public short fileOffset = 0;
        public short fileExtension = 0;

        public string defExt = null;

        public IntPtr custData = IntPtr.Zero;
        public IntPtr hook = IntPtr.Zero;

        public string templateName = null;

        public IntPtr reservedPtr = IntPtr.Zero;
        public int reservedInt = 0;
        public int flagsEx = 0;
    }
}
